trigger:
- main

stages:
- stage: 'Build'
  displayName: 'Build'
  jobs:
  - job: Build
    displayName: "Build"
    pool:
      name: Azure Pipelines
      vmImage: "windows-2019"
      demands: npm
    
    steps:
      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: restore
          projects: '**/**/*.csproj'
      
      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          projects: '**/**/*.csproj'
          arguments: '--configuration Release'

      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
          
      - task: TfxInstaller@3
        inputs:
          version: 'v0.9.x'
      - task: PackageAzureDevOpsExtension@3
        inputs:
          rootFolder: '$(Build.SourcesDirectory)'
          outputPath: '$(Build.ArtifactStagingDirectory)'
          publisherId: 'dimaros'
          updateTasksVersion: true
          extensionVisibility: 'private'
          extensionPricing: 'free'
          zipAfterPublish: false

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact"
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        condition: succeededOrFailed()

- stage: Publish
  displayName: 'Publish to Marketplace'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  dependsOn: 'Build'
  jobs:
  - job: Publish
    displayName: "Publish"
    pool:
      name: Azure Pipelines
      vmImage: "windows-2019"
      demands: npm
    
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
          
    - task: TfxInstaller@3
      inputs:
        version: 'v0.9.x'
    - task: PublishAzureDevOpsExtension@3
      inputs:
        connectTo: 'VsTeam'
        connectedServiceName: 'Visual Studio Marketplace Service Connection'
        fileType: 'vsix'
        vsixFile: '$(Build.ArtifactStagingDirectory)/*.vsix'
  